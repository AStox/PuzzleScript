function new(){
// Music.playnote(4123,1,1,10);
Text.setfont(Font.PIXEL,1);
}

var charWidth:Int=3;
var charHeight:Int=5;
var charOffset:Int = -4;

var mainButton = 0x0000ff;
var mainHighlight = 0x5555ff;
var mainHighlightish = 0x8888ff;
var mainHighlighter = 0xaaaaff;

var panelCol = 0x000088;
var panelColLight = 0x0000aa;
var backgroundCol = Col.NIGHTBLUE;
var textCol = 0xeeeeee;
var darkText=0x888888;

var maxBPM=240;


var instCols = [
  [0x880088,0xff55ff],
  [0x888800,0xffff55],
  [0x880000,0xff5555],
  [0x008888,0x55ffff],
  [0x008800,0x55ff55]
];


var blackNotes = [false,true,false,true,false,false,true,false,true,false,true,false];

// a note is [note, length, onset, amplitude]
var dat = {
  instruments:[1,2,3,4,5],
  sequences:[0,5,2,3,1,0,4,2,5,2],
  notes:[
    [[[5,3,2,0.5],[64,5,6,0.5],[102,1,10,0.5]],[],[],[],[]],
    [[],[],[],[],[]],
    [[],[],[],[],[]],
    [[],[],[],[],[]],
    [[],[],[],[],[]],
    [[],[],[],[],[]],
    [[],[],[],[],[]],
    [[],[],[],[],[]],
    [[],[],[],[],[]],
    [[],[],[],[],[]]
  ],
};

var channelOrder:Array = [0,1,2,3,4];

var selectedInst:Int=0;
var noteLength:Int=3;
var selectedSequenceSlot:Int=0;
var bottomNote=60;

function drawButton(text,x,y,textcolor,color,colorhover):Bool {
  
  var width=text.length*(charWidth+1)+1;
  var height=charHeight+2;

  var dx = Mouse.x-x;
  var dy = Mouse.y-y;

  var collide = !(dx<0||dx>=width||dy<0||dy>=height);


	var click = collide && Mouse.leftclick();

  if (collide&& !click){
    color=colorhover;
  }
	Gfx.fillbox(x,y,width,height,color);
	Text.display(x+1, y+1+charOffset, text, textcolor);
	return click;
}

function drawNumberEntry(tex,x,y,digits){
  
}

function printMouseCoord(){
  Gfx.fillbox(Mouse.x-2,Mouse.y,5,1,0xffffff);
  Gfx.fillbox(Mouse.x,Mouse.y-2,1,5,0xffffff);
  var y =Mouse.y-7+charOffset;
  if (y<0){
    y=Mouse.y+4+charOffset;
  }
  Text.display(Mouse.x+3,y,Mouse.x+","+Mouse.y,textCol);
}

function collideBox(x,y,w,h) : Int {
  var dx = Mouse.x-x;
  var dy = Mouse.y-y;
  

  var collide = !(dx<0||dx>=w||dy<0||dy>=h);
  
  if (collide==false){    
    return 0;    
  }
  if (Mouse.leftclick()){
    return 2;
  }
  return 1;
}

var scrollt=0;
var scrollInterval=12;

function getNum():Int{
  if (Input.justpressed(Key.ONE)){
    return 1;
  }
  if (Input.justpressed(Key.TWO)){
    return 2;
  }
  if (Input.justpressed(Key.THREE)){
    return 3;
  }
  if (Input.justpressed(Key.FOUR)){
    return 4;
  }
  if (Input.justpressed(Key.FIVE)){
    return 5;
  }
  if (Input.justpressed(Key.SIX)){
    return 6;
  }
  if (Input.justpressed(Key.SEVEN)){
    return 7;
  }
  if (Input.justpressed(Key.EIGHT)){
    return 8;
  }
  if (Input.justpressed(Key.NINE)){
    return 9;
  }
  if (Input.justpressed(Key.ZERO)){
    return 0;
  }
  return -1;
}
function update() {
  if (Input.pressed(Key.DOWN)&&bottomNote>0){
    bottomNote--;
  }
  if (Input.pressed(Key.UP)&&bottomNote<132-12){
    bottomNote++;
  }
  if (Input.justpressed(Key.LEFT)&&noteLength>1){
    noteLength--;
  }
  if (Input.justpressed(Key.RIGHT)&&noteLength<16){
    noteLength++;
  }
  scrollt--;
  Gfx.clearscreen(backgroundCol);

  //draw sequence panel
  var cellCount=12;
  Gfx.fillbox(1,9,13,11+cellCount*8,panelCol);
  Text.display(2,10+charOffset,"SEQ",darkText);
  for (i in 0 ... cellCount) {
  var tCol=darkText;
    var collide=collideBox(2,20+i*8,11,7);
  var col:Int=i==selectedSequenceSlot?mainHighlighter:mainHighlight;
  if (collide==1&&i!=selectedSequenceSlot){
    col=mainHighlightish;
    tCol=Col.GREY;
  } 
  if (collide==2){
    selectedSequenceSlot=i;
  }
    Gfx.fillbox(2,20+i*8,11,7,col);  	
  	var s = i>=10? Convert.tostring(i):("0"+Convert.tostring(i));
    Text.display(4,20 + i * 8+charOffset+1,s ,tCol);
  }

  var xOffset=41;
  
	if (drawButton("save",xOffset+1,1,textCol,mainButton,mainHighlight)){
		Debug.log("click");
	}
  
  Text.display(1,2+charOffset,"~~BUSKER~~",Col.DARKBROWN);
    
  //bpm box
	Gfx.fillbox(xOffset+19,1,13,7,panelCol);
	Gfx.fillbox(xOffset+32,1,13,7,mainHighlight);
	Text.display(xOffset+20,2+charOffset,"bpm",textCol);
	Text.display(xOffset+33,2+charOffset,"120",textCol);

  //swing box
	Gfx.fillbox(xOffset+46,1,21,7,panelCol);
	Gfx.fillbox(xOffset+67,1,5,7,mainHighlight);
	Text.display(xOffset+47,2+charOffset,"swing",textCol);
	Text.display(xOffset+68,2+charOffset,"9",textCol);

  //notes box
	Gfx.fillbox(xOffset+73,1,21,7,panelCol);
	Gfx.fillbox(xOffset+94,1,9,7,mainHighlight);
	Text.display(xOffset+74,2+charOffset,"notes",textCol);
	Text.display(xOffset+95,2+charOffset,"16",textCol);
	
	//instruments box
	Gfx.fillbox(145,2,45,7,panelCol);
	Gfx.fillbox(15,9,175,9,panelCol);
	Text.display(146,3+charOffset,"instruments",textCol);

  //draw sequencer
	Gfx.fillbox(16+selectedInst*35-1,9,35,9,0xffffff);


var k=0;
for (k in 0 ... 5){
  var c = collideBox(16-1+k*35,10-1,33+2,7+2);
  if (c>0&&k!=selectedInst){
    Debug.log("paint");
		Gfx.fillbox(16-1+k*35,10-1,33+2,7+2,Col.GREY);    
    if (c==2){
      Debug.log("yo");
      selectedInst=k;
      Debug.log("a"+k);
      Debug.log(channelOrder);
//      channelOrder.Remove(k);
      Debug.log(channelOrder);
//      channelOrder.Push(k);
      Debug.log(channelOrder);
    }
  } 
  {
		Gfx.fillbox(16+k*35,10,33,7,instCols[k][0]);
  }
  var n=dat.instruments[k];
//  Debug.log(k+","+s);
//	Text.display(17+k*35,11+charOffset,Convert.tostring(n),instCols[k][1]);
  if (c>0){
    var n = getNum();
    if (n>=0){
      dat.instruments[k]=((dat.instruments[k]*10) % 1000000000)+n;
      Debug.log(dat.instruments[k]);
    }
  }
}

  //draw note

	Gfx.fillbox(145,19,45,7,panelCol);
	Text.display(146,20+charOffset,"Note Length",textCol);

	Gfx.fillbox(145,27,45,7,mainHighlight);
	Text.display(163,28+charOffset,noteLength.toString(),textCol);

	Gfx.fillbox(145,19+20,45,7,panelCol);
	Text.display(146,20+20+charOffset,"Loudness",textCol);

	Gfx.fillbox(145,27+20,45,7,mainHighlight);
	Text.display(160,28+20+charOffset,"100",textCol);


	//draw grid
	var gx=22;
	var gy=21;
	var cellWidth=8;
	var cellHeight=8;
	var xCells=16;
	var yCells=12;

	Gfx.fillbox(gx,gy,xCells*(cellWidth)+1,yCells*(cellHeight)+1,panelCol);
	

  var octaveDisplay:Int = Math.floor((bottomNote+11)/12);
  var cNotePos = ((bottomNote+11)%12);
//	Debug.log((gx-5)+","+(gy+cellHeight*cNotePos)+","+octaveDisplay);
	if (octaveDisplay>9){
		Text.display(gx-7,gy+cellHeight*(cNotePos)+2+charOffset,Convert.tostring(octaveDisplay));
  } else {
		Text.display(gx-3,gy+cellHeight*(cNotePos)+2+charOffset,Convert.tostring(octaveDisplay));    
  }

	Gfx.fillbox(gx-7,gy+cellHeight*(cNotePos+1),xCells*cellWidth+8,1,Col.GREY);
	
  for (i in 0 ... xCells){
    for (j in 0 ... yCells){
      var col=mainHighlight;
      if (i%4==0){
        col=mainHighlighter;
      } else if (!blackNotes[(137-bottomNote+j)%12]){
        col=mainHighlightish;   
      }
      Gfx.fillbox(gx+1+cellWidth*i,gy+1+cellHeight*j,cellWidth-1,cellHeight-1,col); 

    }
  }
  
  var selectedSequence = dat.sequences[selectedSequenceSlot];
  //draw notes
  for (c2 in 0...5){
    var c = channelOrder[c2];
//    Debug.log(c,c2);
    var channel = dat.notes[selectedSequence][c];  
    var colIndex = c==selectedInst?1:0;
    var col = instCols[c][colIndex];
//    Debug.log(c+","+selectedInst+","+col);
    for (n in channel){
        // var n = channel[nIndex];
         // a note is [note, length, onset, amplitude]
    		 var notePos = n[0];
         var dNote = notePos-bottomNote;   
         var x = gx+1+cellWidth*(n[2]);
    		 var l = n[1];
         if (dNote<0){
				 	//draw note on bottom
           var y = 118;
           Gfx.fillbox(x,y,cellWidth*l-1,1,col);
         } else if (dNote>12){
           //draw note on top
           var y = 20;
           Gfx.fillbox(x,y,cellWidth*l-1,1,col);
         } else {
           //draw note on grid
           var y = gy+1+cellHeight*(12-dNote);
           var l = n[1];

           Gfx.fillbox(x,y,cellWidth*l-1,cellHeight-1,col);
         }
    }
  }
    
  var gridWidth = cellWidth*xCells;
	var gridHeight = cellHeight*yCells;
	var dx=Mouse.x-gx;
	var dy=Mouse.y-gy;
  if (dx>=0 && dx<gridWidth && dy>=0 && dy<gridHeight){

    if (noteLength>1 && Mouse.mousewheel< -1 && scrollt<=0){
       noteLength--;
	      scrollt=scrollInterval;
    } else if (noteLength<16 && Mouse.mousewheel>1 && scrollt<=0){
      noteLength++;
      scrollt=scrollInterval;
    }

		var sx = Math.floor(dx/cellWidth);
    var sy = Math.floor(dy/cellHeight);
    var l = noteLength;
    //check if it's in range
    if (sx+l>=xCells){
      l=xCells-sx;
    }
    Gfx.drawbox(gx+1+cellWidth*sx,gy+1+cellHeight*sy,cellWidth*l-1,cellHeight-1,0xffffff); 
    if (Mouse.leftclick()){
      var seqIndex=dat.sequences[selectedSequenceSlot];
      Debug.log(selectedInst+" : " +dat.notes[seqIndex]+"("+selectedSequenceSlot+")");
      // a note is [note, length, onset, amplitude]
      Debug.log("index " +seqIndex+","+selectedInst);
      dat.notes[seqIndex][selectedInst].push([bottomNote+12-sy,l,sx,100]);
      Debug.log("post "+dat.notes[seqIndex][selectedInst]);
    }
  }

  printMouseCoord();
}